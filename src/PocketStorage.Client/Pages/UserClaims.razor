@page "/userclaims"
@using System.Security.Claims
@using PocketStorage.BFF.Authorization.Filters
@using PocketStorage.BFF.Authorization.Enums
@attribute [Permit(Permissions = Permission.ViewUsers)]
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Claims principal</PageTitle>

<div class="text-center">
    <h1 class="display-6">Claims principal</h1>
</div>
<div class="row">
    <div class="col-12 text-center">
        @if (Claims.Any())
        {
            <p class="lead">
                <strong>Claims</strong>
            </p>
            @foreach (var claim in Claims)
            {
                <p class="lead">@claim.Type</p>
                <p>
                    <code>@claim.Value</code>
                </p>
            }
        }
    </div>
</div>

@code {
    public IEnumerable<Claim> Claims { get; set; } = Enumerable.Empty<Claim>();

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var principal = state.User;

        if (principal.Identity is {IsAuthenticated: true })
        {
            Claims = principal.Claims;
        }
    }

}
