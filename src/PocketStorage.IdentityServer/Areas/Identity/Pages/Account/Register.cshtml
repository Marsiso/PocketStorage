@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="text-center mb-3">
    <h1 class="display-6">Sign up with a new account</h1>
</div>
<div class="row justify-content-center">
    <div class="col-12" style="max-width: 20rem;">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="mb-3 needs-validation" novalidate>
            <div class="mb-3">
                <label asp-for="Form.GivenName" class="form-label">Given name</label>
                <input asp-for="Form.GivenName" type="email" class="@(Model.Errors.ContainsKey(nameof(Model.Form.GivenName)) ? "form-control is-invalid" : "form-control")" autocomplete="given-name" aria-required="true" placeholder="Your given name" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.GivenName), out var giveNameErrors))
                {
                    <div class="invalid-feedback">
                        @giveNameErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.FamilyName" class="form-label">Family name</label>
                <input asp-for="Form.FamilyName" type="email" class="@(Model.Errors.ContainsKey(nameof(Model.Form.FamilyName)) ? "form-control is-invalid" : "form-control")" autocomplete="family-name" aria-required="true" placeholder="Your family name" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.FamilyName), out var familyNameErrors))
                {
                    <div class="invalid-feedback">
                        @familyNameErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.Email" class="form-label">Email</label>
                <input asp-for="Form.Email" type="email" class="@(Model.Errors.ContainsKey(nameof(Model.Form.Email)) ? "form-control is-invalid" : "form-control")" autocomplete="email" aria-required="true" placeholder="Your email address" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.Email), out var emailErrors))
                {
                    <div class="invalid-feedback">
                        @emailErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.Password" class="form-label">Password</label>
                <input asp-for="Form.Password" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.Password)) ? "form-control is-invalid" : "form-control")" autocomplete="new-password" aria-required="true" placeholder="Your password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.Password), out var passwordErrors))
                {
                    <div class="invalid-feedback">
                        @passwordErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.ConfirmPassword" class="form-label">Confirm password</label>
                <input asp-for="Form.ConfirmPassword" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.ConfirmPassword)) ? "form-control is-invalid" : "form-control")" autocomplete="new-password" aria-required="true" placeholder="Confirm your password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.ConfirmPassword), out var confirmPasswordErrors))
                {
                    <div class="invalid-feedback">
                        @confirmPasswordErrors.First()
                    </div>
                }
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-secondary">Register</button>
        </form>
        <div class="d-flex justify-content-center">
            <div>
                <p>
                    <a id="forgot-password" asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl" class="page-link">
                        <span class="fa-solid fa-envelope"></span>
                        Login with an existing account
                    </a>
                </p>
            </div>
        </div>
    </div>
</div>
