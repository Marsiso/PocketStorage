@page
@model ChangePasswordModel
@{
    ViewData["Title"] = "Manage sign-in password";
}

<div class="text-center mb-3">
    <h1 class="display-6">Manage sign-in password</h1>
</div>
<partial name="_StatusMessage" for="StatusMessage"/>
<div class="row justify-content-center">
    <div class="col-12" style="max-width: 20rem;">
        <form id="change-password-form" method="post" class="mb-3 needs-validation" novalidate>
            <div class="mb-3">
                <label asp-for="Form.OldPassword" class="form-label">Password</label>
                <input asp-for="Form.OldPassword" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.OldPassword)) ? "form-control is-invalid" : "form-control")" autocomplete="password" aria-required="true" placeholder="Please enter your password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.OldPassword), out var previousPasswordErrors))
                {
                    <div class="invalid-feedback">
                        @previousPasswordErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.NewPassword" class="form-label">New password</label>
                <input asp-for="Form.NewPassword" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.NewPassword)) ? "form-control is-invalid" : "form-control")" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.NewPassword), out var newPasswordErrors))
                {
                    <div class="invalid-feedback">
                        @newPasswordErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.ConfirmPassword" class="form-label">Confirm new password</label>
                <input asp-for="Form.ConfirmPassword" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.ConfirmPassword)) ? "form-control is-invalid" : "form-control")" autocomplete="new-password" aria-required="true" placeholder="Please repeat your new password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.ConfirmPassword), out var confirmNewPasswordErrors))
                {
                    <div class="invalid-feedback">
                        @confirmNewPasswordErrors.First()
                    </div>
                }
            </div>
            <button type="submit" class="w-100 btn btn-secondary">Update password</button>
        </form>
    </div>
</div>
