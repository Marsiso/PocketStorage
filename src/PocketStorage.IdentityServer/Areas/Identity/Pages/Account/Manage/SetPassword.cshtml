@page
@model SetPasswordModel
@{
    ViewData["Title"] = "Set password";
}

<div class="text-center mb-3">
    <h1 class="display-6">Set your password</h1>
</div>
<partial name="_StatusMessage" for="StatusMessage"/>
<div class="row justify-content-center">
    <div class="col-12 d-flex justify-content-center">
        <div style="max-width: 30rem;">
            <div class="alert alert-primary d-flex align-items-center justify-content-center" role="alert">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
                </svg>
                <div class="ms-3">
                    You do not have a local username/password for this site. Add a local account so you can log in without an external login.
                </div>
            </div>
        </div>
    </div>
    <div class="col-12" style="max-width: 20rem;">
        <form id="set-password-form" method="post" class="mb-3 needs-validation" novalidate>
            <div class="mb-3">
                <label asp-for="Form.NewPassword" class="form-label">New password</label>
                <input asp-for="Form.NewPassword" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.NewPassword)) ? "form-control is-invalid" : "form-control")" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.NewPassword), out var newPasswordErrors))
                {
                    <div class="invalid-feedback">
                        @newPasswordErrors.First()
                    </div>
                }
            </div>
            <div class="mb-3">
                <label asp-for="Form.ConfirmPassword" class="form-label">Confirm new password</label>
                <input asp-for="Form.ConfirmPassword" type="password" class="@(Model.Errors.ContainsKey(nameof(Model.Form.ConfirmPassword)) ? "form-control is-invalid" : "form-control")" autocomplete="new-password" aria-required="true" placeholder="Please repeat your new password" required/>
                @if (Model.Errors.TryGetValue(nameof(Model.Form.ConfirmPassword), out var confirmNewPasswordErrors))
                {
                    <div class="invalid-feedback">
                        @confirmNewPasswordErrors.First()
                    </div>
                }
            </div>
            <button type="submit" class="w-100 btn btn-secondary">Set password</button>
        </form>
    </div>
</div>
